stages:
  - lint
  - build
  - test


flake8:
  image: python:3.10
  stage: lint
  before_script:
    - python -m pip install --upgrade toml
    - python -c "import toml; print(' '.join(repr(x) for x in toml.load('pyproject.toml')['project']['optional-dependencies']['lint']))" | xargs pip install
  script:
    - pflake8

.py310:
  variables:
    PYENV_VERSION_ID: "3.10.0"
    PYTHON_VERSION_TAG: "cp310-cp310"

.wheel:
  stage: build
  needs:
    - flake8
  rules:
    - if: '$CI_COMMIT_TAG != null'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: manual
      allow_failure: true
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh
    - chmod +x rustup.sh
    - ./rustup.sh -y
    - export PATH="$PATH:$HOME/.cargo/bin"
    - python -m pip install --upgrade pip
    - ./install.sh
    - python -m pip wheel -v --no-deps .
  artifacts:
    paths:
      - "raspy-*.whl"
    expire_in: 1 day

.wheel:linux:
  extends: .wheel
  image: quay.io/pypa/manylinux2014_x86_64
  script:
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh
    - chmod +x rustup.sh
    - ./rustup.sh -y
    - export PATH="$PATH:$HOME/.cargo/bin"
    - /opt/python/${PYTHON_VERSION_TAG}/bin/python -m pip install --upgrade pip
    - cargo build --release --manifest-path=rays/Cargo.toml
    - cp ./rays/target/release/librays.rlib ./src/librays.rlib
    - cargo build --release --manifest-path=Rust-Raytracing/Cargo.toml
    - cp ./Rust-Raytracing/target/release/libraytracing.rlib ./src/libraytracing.rlib
    - /opt/python/${PYTHON_VERSION_TAG}/bin/python -m pip wheel -v --no-deps -e .

wheel:linux:py310:
  extends:
    - .py310
    - .wheel:linux
  rules:
    - when: on_success

.pytest:
  stage: test
  before_script:
    - python -m pip install pytest
  script:
    - python -m pip install raspy-0.0.0-cp310-cp310-linux_x86_64.whl
    - python -m pip -V
    - cd tests
    - python -m pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_TAG != null'
      when: on_success
      allow_failure: false
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
      allow_failure: false
    - when: on_success
      allow_failure: true

pytest:linux:py310:
  extends: .pytest
  image: python:3.10
  needs:
    - wheel:linux:py310
  rules:
    - when: on_success
      allow_failure: false
